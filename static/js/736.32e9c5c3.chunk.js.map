{"version":3,"file":"static/js/736.32e9c5c3.chunk.js","mappings":"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","sources":["api/api.js","pages/HomePage.styled.js","pages/MovieDetailsPage.styled.js","pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'c386e8b288993af3daa930866edd5828';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjMzg2ZThiMjg4OTkzYWYzZGFhOTMwODY2ZWRkNTgyOCIsInN1YiI6IjY0ZjhjMGUwZmZjOWRlMDBjNGExZWI0MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RSJYj5_qh9lA0FcInIa0sGWqA44kBSzQ826duTlAxt0',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/trending/movie/day?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n\n  return data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n\n  return data;\n};\n\nexport const fetchMovieSearch = async (query, page) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/3/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`,\n    options\n  );\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  text-align: center;\n  margin: 1em 0 0.5em 0;\n  font-weight: 100;\n  text-transform: uppercase;\n  color: #6Cf;\n  font-style: italic;\n  font-family: 'Josefin Sans', sans-serif;\n  font-size: 45px;\n  line-height: 45px;\n  text-shadow: 2px 5px 0 rgba(0, 0, 0, 0.2);\n`;\nexport const WrapMoviesList = styled.div`\n  margin-top: 55px;\n`;\nexport const Loader = styled.div`\n    margin-left: 45%;\n    margin-right: auto;\n    justify-content: center;\n    position: relative;\n    padding-bottom: 100px;\n ` \nexport const Error = styled.div`\ntext-align: center;\n  margin: 1em 0 0.5em 0;\n  font-weight: 100;\n  text-transform: uppercase;\n  color: #6Cf;\n  font-style: italic;\n  font-family: 'Josefin Sans', sans-serif;\n  font-size: 45px;\n  line-height: 45px;\n  text-shadow: 2px 5px 0 rgba(0, 0, 0, 0.2);\n`","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCardWrapStyled = styled.div`\nmargin-left: 25px;\ndisplay: flex;\ngap: 35px;\n\n`\nexport const InfoMovieCardStyled = styled.div`\nmax-width: 600px\n`\nexport const HeadingAddInfoStyled = styled.h4`\n\nfont-size: 20px;\nmargin-top: 35px;\n`\nexport const AddInfoWrapStyled = styled.div`\nmargin-left: 25px;\n`\n\nexport const ListWrapAddStyled = styled.ul`\nlist-style: none;\ncolor: #34312D;\nfont-size: 18px;\ntext-decoration: none;\n`\n\nexport const LinkStyled = styled(Link)`\nfont-size: 17px;\ntext-decoration: none;\ncolor: #34312D;\nmargin: 25px;\nborder: 1px solid gray;\nborder-radius: 5px;\npadding: 8px;\ndisplay: inline-block;\nbackground-color: lightgray;\nwidth: 90px;\ncursor: pointer;\n\ntransition: all 200ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n&:hover{\n    color: #14110F;\n    border-color: #14110F;\n    background-color: #D9C5B2;\n}\n`","import { fetchMovieDetails } from \"api/api\";\nimport { Discuss } from \"react-loader-spinner\";\nimport { useState, useEffect, useRef, Suspense } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\nimport {\n  MovieCardWrapStyled,\n  InfoMovieCardStyled,\n  HeadingAddInfoStyled,\n  AddInfoWrapStyled,\n  ListWrapAddStyled,\n  LinkStyled,\n} from \"./MovieDetailsPage.styled\";\nimport { Error } from \"./HomePage.styled\";\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieObject, setMovieObject] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const goBackRef = useRef(location.state?.from ?? \"/\");\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    async function fetchMovieObject() {\n      try {\n        setIsLoading(true);\n        const movieDetails = await fetchMovieDetails(movieId);\n        setMovieObject(movieDetails);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieObject();\n  }, [movieId]);\n\n  return (\n    <div>\n      <LinkStyled to={goBackRef.current}> Go back</LinkStyled>\n      <Error>\n        {error !== null && <p>Oops, something went wrong. please, try later</p>}\n      </Error>\n      {isLoading && (\n        <Discuss\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"comment-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"comment-wrapper\"\n          color=\"#fff\"\n          backgroundColor=\"#F4442E\"\n        />\n      )}\n      {movieObject !== null && (\n       <div>\n          <MovieCardWrapStyled>\n            {movieObject.poster_path === null ? (\n              <img\n                alt={movieObject.original_title}\n                src=\"https://via.placeholder.com/250x200\"\n              />\n            ) : (\n              <img\n                alt={movieObject.poster_path}\n                src={`http://image.tmdb.org/t/p/w300${movieObject.poster_path}`}\n              ></img>\n            )}\n\n            <InfoMovieCardStyled>\n              <h2>\n                {movieObject.original_title} ({movieObject.release_date})\n              </h2>\n              <p>Rating: {movieObject.vote_average}</p>\n              <div>\n                <h3>Overview</h3>\n                <p>{movieObject.overview}</p>\n              </div>\n              <div>\n                <h3>Genres</h3>\n                <ul>\n                  {movieObject.genres.map((genre) => (\n                    <li key={genre.id}>{genre.name}</li>\n                  ))}\n                </ul>\n              </div>\n            </InfoMovieCardStyled>\n          </MovieCardWrapStyled>\n\n          <AddInfoWrapStyled>\n            <HeadingAddInfoStyled>Additional information</HeadingAddInfoStyled>\n            <ListWrapAddStyled>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ListWrapAddStyled>\n            <Suspense fallback={<Discuss />}>\n              <Outlet />\n            </Suspense>\n          </AddInfoWrapStyled>\n\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["BASE_URL","API_KEY","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","data","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","fetchMovieSearch","query","page","Heading","styled","WrapMoviesList","Loader","Error","MovieCardWrapStyled","InfoMovieCardStyled","HeadingAddInfoStyled","AddInfoWrapStyled","ListWrapAddStyled","LinkStyled","Link","useParams","useState","movieObject","setMovieObject","isLoading","setIsLoading","error","setError","location","useLocation","goBackRef","useRef","state","from","useEffect","movieDetails","message","fetchMovieObject","to","current","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","color","backgroundColor","poster_path","alt","original_title","src","release_date","vote_average","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}